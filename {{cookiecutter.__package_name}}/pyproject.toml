[tool.poetry]
name = "{{cookiecutter.__package_name}}"
version = "0.0.0"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.authors}}"]
license = "{{cookiecutter.license}}"
readme = "README.md"
packages = [{ include = "{{cookiecutter.__package_name}}", from = "src" }]

[tool.poetry.dependencies]
python = "^{{cookiecutter.__python_version}}"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.docformatter]
recursive = true
in-place = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true
pre-summary-newline = true

[tool.pydocstyle]
convention = "pep257"
match-dir = '^(?!tests$)[^\.].*'

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true

[tool.black]
line-length = 120

[tool.pylint]
disable = ["missing-module-docstring", "fixme"]
max-args = 6

[tool.pylint.format]
max-line-length = 120

[tool.pylint.main]
extension-pkg-allow-list = ["pydantic"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ['tests']
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]
follow_imports = "normal"

[tool.bandit]
skips = []

[tool.coverage.run]
branch = true
source = ["src/{{cookiecutter.__package_name}}"]
omit = ["*constants.py"]

[tool.coverage.report]
ignore_errors = false
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "AbstractMethodError",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
filterwarnings = ["ignore::DeprecationWarning"]
pythonpath = "."

[tool.commitizen]
bump_message = "chore(release): $current_version â†’ $new_version"
update_changelog_on_bump = true
version = "0.0.0"
version-scheme = "pep440"
version_files= [
    "pyproject.toml:^version",
    "src/{{cookiecutter.__package_name}}/__init__.py:^__version__",
    ]
